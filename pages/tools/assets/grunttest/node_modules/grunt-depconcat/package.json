{
  "name": "grunt-depconcat",
  "description": "Concat depended files",
  "version": "0.1.2",
  "homepage": "https://github.com/terrykingcha/grunt-depconcat",
  "author": {
    "name": "tERry.K",
    "email": "terrykingcha@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:terrykingcha/grunt-depconcat.git"
  },
  "bugs": {
    "url": "https://github.com/terrykingcha/grunt-depconcat/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/terrykingcha/grunt-depconcat/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "devDependencies": {
    "grunt-contrib-jshint": "~0.1.1",
    "grunt-contrib-clean": "~0.4.0",
    "grunt-contrib-nodeunit": "~0.1.2",
    "grunt": "~0.4.1"
  },
  "peerDependencies": {
    "grunt": "~0.4.1"
  },
  "keywords": [
    "gruntplugin",
    "dependenices",
    "concat"
  ],
  "readme": "# grunt-depconcat\r\n\r\n> Concat depended files\r\n\r\n## Getting Started\r\nThis plugin requires Grunt `~0.4.1`\r\n\r\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\r\n\r\n```shell\r\nnpm install grunt-depconcat --save-dev\r\n```\r\n\r\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\r\n\r\n```js\r\ngrunt.loadNpmTasks('grunt-depconcat');\r\n```\r\n\r\n## The \"depconcat\" task\r\n\r\n### Overview\r\nIn your project's Gruntfile, add a section named `depconcat` to the data object passed into `grunt.initConfig()`.\r\n\r\n```js\r\ngrunt.initConfig({\r\n  depconcat: {\r\n    options: {\r\n      // Task-specific options go here.\r\n    },\r\n    your_target: {\r\n      // Target-specific file lists and/or options go here.\r\n    },\r\n  },\r\n})\r\n```\r\n\r\n### Options\r\n\r\n#### separator\r\nType: `String`  \r\nDefault: `grunt.util.linefeed`\r\n\r\nConcatenated files will be joined on this string. If you're post-processing concatenated JavaScript files with a minifier, you may need to use a semicolon `';'` as the separator.\r\n\r\n\r\n#### requireEmplate\r\nType: `String`  \r\nDefault: `\\\\/\\\\/@require ([\\\\w\\\\.]+)`\r\n\r\nThe RegExp string of depended indication.\r\n\r\n#### ext\r\nType: `String`  \r\nDefault: `.js`\r\n\r\nThe extname for files.\r\n\r\n#### except\r\nType: `Array`  \r\nDefault: `[]`\r\n\r\nThe excepted files.\r\n\r\n### Usage Examples\r\n\r\n#### basic usage for js\r\nIn this example, when `1.js` require `2.js`, and `2.js` require `3.js`, the Concatenated files will be joined as `3.js` + `2.js` + `1.js`.\r\n\r\nrequire js file like this:\r\n\r\n\t//require 1\r\n\t//require 2\r\n\r\nconcatenat them:\r\n\r\n```js\r\ngrunt.initConfig({\r\n  depconcat: {\r\n    options: {},\r\n    files: {\r\n      'dest/all.js': ['src/1.js', 'src/2.js', 'src/3.js'],\r\n    },\r\n  },\r\n})\r\n```\r\n\r\n#### basic usage for css\r\nIn this example, when `1.css` import `2.css` , and `2.css` import `3.css`, the Concatenated files will be joined as `3.css` + `2.css` + `1.css`.\r\n\r\nrequire css file like this as usual:\r\n\r\n\t@import url(1.css)\r\n\t@import url(2.css)\r\n\r\nconcatenat them:\r\n\r\n```js\r\ngrunt.initConfig({\r\n  depconcat: {\r\n    options: {},\r\n    files: {\r\n      'dest/all.css': ['assets/1.css', 'src/2.css', 'src/3.css'],\r\n    },\r\n  },\r\n})\r\n```\r\n\r\n#### except files\r\n\r\n```js\r\ngrunt.initConfig({\r\n  depconcat: {\r\n    options: {\r\n\t\texcept: ['zepto.js']\r\n\t},\r\n    files: {\r\n      'dest/all.js': ['<%= src/*.js %>'],\r\n    },\r\n  },\r\n})\r\n```\r\n\r\n#### use custom `requiteTemplate`\r\n\r\nIn this example, we have some tepmlate files named `1.tpl`, `2.tpl`, `3.tpl`.\r\n\r\nrequire template file lik this:\r\n\r\n\t//extend 1\r\n\t//extend 2\r\n\r\nconcatenat them:\r\n\r\n```js\r\ngrunt.initConfig({\r\n  depconcat: {\r\n    options: {\r\n\t\text: '.tpl',\r\n\t\trequiteTemplate: '\\\\/\\\\/extend ([\\\\w.]+)'\r\n\t},\r\n    files: {\r\n      'dest/all.tpl': ['<%= templates/*.tpl %>'],\r\n    },\r\n  },\r\n})\r\n```\r\n\r\n#### use depended tree\r\n\r\nIn this example, we have a depended tree for files, like this:\r\n\r\n```js\r\n{\r\n\t'1.js': ['2.js', '3.js'],\r\n\t'2.js': ['4.js']\r\n\t'3.js': [],\r\n\t'4.js': []\r\n}\r\n```\r\n\r\nconcatenat them:\r\n\r\n```js\r\ngrunt.initConfig({\r\n  depconcat: {\r\n    options: {},\r\n    my_target: {\r\n\t  tree: {\r\n\t\t'1.js': ['2.js', '3.js'],\r\n\t\t'2.js': ['4.js']\r\n\t\t'3.js': [],\r\n\t\t'4.js': []\r\n\t  },\r\n      dest: 'dest/all.js'\r\n    },\r\n  },\r\n})\r\n```\r\n\r\nor load a tree file:\r\n\r\n```js\r\ngrunt.initConfig({\r\n  depconcat: {\r\n    options: {},\r\n    my_target: {\r\n\t  tree: 'src/.tree',\r\n      dest: 'dest/all.js'\r\n    },\r\n  },\r\n})\r\n```\r\n\r\n\r\n## Warning\r\n\r\nBe careful of \"`Circular Dependency`\". We will support to check it in the future.\r\n\r\n## Release History\r\n_(Nothing yet)_\r\n",
  "readmeFilename": "README.md",
  "_id": "grunt-depconcat@0.1.2",
  "_from": "grunt-depconcat"
}
